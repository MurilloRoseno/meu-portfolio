---
import Layout from "../layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import pt from "../content/i18n/pt.json";
import en from "../content/i18n/en.json";

export function getStaticPaths() { return [{ params: { lang: 'pt' } }, { params: { lang: 'en' } }]; }
const { lang } = Astro.params;
const t = lang === "en" ? en : pt;

const githubToken = import.meta.env.GITHUB_PAT;
let projects = [];

if (githubToken) {
try {
const response = await fetch("https://api.github.com/users/MurilloRoseno/repos?sort=pushed&per_page=100", {
headers: { 'Authorization': 	oken  },
});
if (response.ok) {
const allProjects = await response.json();
projects = allProjects.filter(repo => !repo.fork).slice(0, 6);
} else {
console.error(Erro ao buscar dados do GitHub: );
}
} catch (e) {
console.error("Falha ao fazer a requisição para o GitHub:", e);
}
} else {
console.error("ERRO CRÍTICO: A variável de ambiente GITHUB_PAT não foi encontrada.");
}

const formatDate = (dateString) => new Date(dateString).toLocaleDateString(t.lang, { year: 'numeric', month: 'long', day: 'numeric' });
---
<Layout title={t.pageTitle} description={t.metaDescription} lang={t.lang}>
<header class="container mx-auto max-w-4xl px-6 py-20 text-center">
<img src="https://avatars.githubusercontent.com/u/9678132?v=4" alt="Foto de Murillo Roseno" class="w-32 h-32 rounded-full mx-auto mb-6 border-4 border-emerald-400"/>
<h1 class="text-5xl font-black mb-2 gradient-text">Murillo Roseno</h1>
<p class="text-xl text-gray-400 max-w-2xl mx-auto">{t.bio}</p>
<div class="flex justify-center gap-4 mt-8">
<a href="https://github.com/MurilloRoseno" target="_blank" class="text-gray-400 hover:text-white transition-colors"><Icon name="mdi:github" class="w-8 h-8" /></a>
<a href="https://www.linkedin.com/in/murilloroseno/" target="_blank" class="text-gray-400 hover:text-white transition-colors"><Icon name="mdi:linkedin" class="w-8 h-8" /></a>
</div>
</header>
<main class="container mx-auto max-w-4xl px-6 py-10">
<h2 class="text-4xl font-bold text-center mb-4">{t.projectsTitle}</h2>
<p class="text-center text-gray-400 mb-12">{t.projectsDescription}</p>
<div class="grid grid-cols-1 md:grid-cols-2 gap-8">
{projects.map((repo) => (
<a href={repo.html_url} target="_blank" class="bg-gray-800/50 rounded-lg p-6 hover:bg-gray-700/50 border border-gray-700 hover:border-emerald-400 transition-all transform hover:-translate-y-1">
<header class="flex items-center justify-between mb-4"><h3 class="text-xl font-bold text-emerald-400">{repo.name}</h3>{repo.language && <span class="text-xs bg-gray-700 px-2 py-1 rounded-full">{repo.language}</span>}</header>
<p class="text-gray-400 mb-4 min-h-[48px]">{repo.description || t.repoDescriptionFallback}</p>
<footer class="flex items-center justify-between text-sm text-gray-500">
<div class="flex items-center gap-4">
<span class="flex items-center gap-1"><Icon name="mdi:star" class="w-4 h-4" />{repo.stargazers_count}</span>
<span class="flex items-center gap-1"><Icon name="mdi:source-fork" class="w-4 h-4" />{repo.forks_count}</span>
</div>
<span>{t.lastUpdated} {formatDate(repo.pushed_at)}</span>
</footer>
</a>
))}
</div>
</main>
    <footer class="text-center py-12 px-6 text-gray-500">
        <div class="flex justify-center gap-4 mb-4">
            <a href="/pt" class:list={["hover:text-white transition-colors", { "text-emerald-400 font-bold": lang === "pt" }]}>Português</a>
            <span class="text-gray-600">|</span>
            <a href="/en" class:list={["hover:text-white transition-colors", { "text-emerald-400 font-bold": lang === "en" }]}>English</a>
        </div>
        <p>{t.footerText}</p>
    </footer>
</Layout>
